#!/usr/bin/python

# This script scans the haproxy configuration and generates the keepalived config to match.
# Used in HA deployments.

# Required: haproxy_extract_ips (to actually get the list of IPs).

# First developed: Hereward Cooper - Apr 2011

import subprocess
import re
import datetime
import imp
import sys
from subprocess import Popen, PIPE, STDOUT

# Get current time
time = datetime.datetime.now()

## Import the sysconfig configuration file
config = imp.load_source('haproxy', '/etc/sysconfig/haproxy')

## Check the haproxy slave config
try:
	config.HAPROXYSLAVE
except:
	ROLE="slave"
	PRIORITY="100"
else:
	ROLE="master"
	PRIORITY="101"

## Check the interface where the VIPs live is defined
try:
	config.VIPINT
except:
	print "ERROR: No interface defined in /etc/sysconfig/haproxy"
	sys.exit(1)
else:
	VIPINT = config.VIPINT


# Run the script to extract IPs from HAProxy
getips = subprocess.Popen(["/usr/bin/haproxy_extract_ips"], shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT, close_fds=True)
VIPS = getips.stdout.read()

OUTPUT = """
## /etc/keepalived/keepalived.conf
## THIS CONFIGURATION IS AUTOMATICALLY GENERATED.
## MANUAL CHANGES WILL BE OVERWRITTEN.
##
## Configuration at """ + str(time.ctime()) + """
## ROLE = """ + ROLE + """
## VIPINT = """ + VIPINT + """

vrrp_script chk_haproxy {               # Requires keepalived-1.1.13
        script "killall -0 haproxy"     # cheaper than pidof
        interval 2                      # check every 2 seconds
        weight 2                        # add 2 points of prio if OK
}

vrrp_instance VI_1 {
        interface """ + VIPINT + """
        state MASTER
        virtual_router_id 51
        priority """ + PRIORITY + """			# 101=master, 100=standby
        virtual_ipaddress {
		""" + VIPS + """
        }
        track_script {
            chk_haproxy
        }
}
"""
print OUTPUT
